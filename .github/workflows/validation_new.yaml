name: Salesforce Data Import Pipeline - DEVCI

run-name: Workflow run PR No - ${{ github.event.pull_request.number }} and PR title - ${{ github.event.pull_request.title }} by @${{ github.actor }}

on:
  pull_request:
    branches:
      - main

    types:
      - opened
      - labeled

    labels:
      - 'Deploy Again'

jobs:
  Salesforce-Data-Import:
    runs-on: ubuntu-latest
    outputs:
      files: ${{ steps.list.outputs.files }}
    
    steps:
      # Checkout the current repository with all branches
      - id: CheckoutRepo
        name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: create test files
        run: |
          mkdir src
          mkdir src/AAA__c
          mkdir src/AAA__c/logs
          mkdir src/AAA__c/source
          mkdir src/AAA__c/target
          touch src/AAA__c/logs/1.log
          touch src/AAA__c/source/1.log
          touch src/AAA__c/target/1.log

          mkdir src/BBB__c
          mkdir src/BBB__c/logs
          mkdir src/BBB__c/source
          mkdir src/BBB__c/target
          touch src/BBB__c/logs/1.log
          touch src/BBB__c/source/1.log
          touch src/BBB__c/target/1.log

      - name: check files created
        run: |
          ls -lRa
      
      - name: Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Instalar dependÃªncias
        run: npm install @actions/artifact

      # Check all modified folders and tar.gz the files if exist
      - name: Check all modified folders and tar.gz the files if exist
        id: compactFiles
        env:
          ACTIONS_RUNTIME_TOKEN: ${{ secrets.GH_PAT }}
          ACTIONS_RUNTIME_URL: ${{ github.server_url }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_RUN_ID: ${{ github.run_id }}
        run: |
           env | grep GITHUB_
           cd src
           find . -mindepth 1 -maxdepth 1 -type d | while read -r folder; do
             echo "Processing folder: $folder"
             pwd
             ls -la
             cd "$folder"

             echo "Current directory: $(pwd)"
             echo "Listing files in current directory before SFDMU execution:"
             ls -la  

             OBJECT_NAME=$(basename "$folder")

             if [ -d "logs" ] || [ -d "source" ] || [ -d "target" ]; then
               echo "Checking if logs, source or target files exist"
               tar -czf ../$OBJECT_NAME.zip  logs source target
               
               python ../../.github/workflows/helper.py  ${{ github.run_id }} ${{ secrets.GH_PAT }} $OBJECT_NAME.zip
             else
               echo "No logs, source or target files found."
             fi

             cd ..
            
           done
       ##node ../../.github/workflows/upload-artifact.js $OBJECT_NAME.zip
      - name: list `.zip` files
        run: |
          cd src
          ls -la *.zip || echo "file not found"

      - name: Listar arquivos para matriz
        id: list
        run: |
          files=$(ls src/*.zip | xargs -n 1 basename | jq -R -s -c 'split("\n")[:-1]')
          echo "Arquivos encontrados: $files"
          echo "files=$files" >> "$GITHUB_OUTPUT"
